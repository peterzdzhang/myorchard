@model CreateIndexViewModel
@using Faurecia.FTL.ViewModels;
@{
    Script.Require("jQueryUI");
    Script.Require("Microsoft_jQueryAjax_Validate");
    Style.Require("jQueryUI_Orchard");
    Style.Require("FaureciaFTLStyle");
    Script.Require("jqgrid");
    Style.Require("jqgrid");
    Script.Require("jqgrid_en");
    Response.Cache.SetCacheability(System.Web.HttpCacheability.NoCache);
}
@using (Script.Head())
{
    <link href="/Themes/PJS.Bootstrap/styles/jqgrid/ui.jqgrid-bootstrap-ui.css" rel="stylesheet" type="text/css">
    <link href="/Themes/PJS.Bootstrap/styles/jqgrid/ui.jqgrid-bootstrap.css" rel="stylesheet" type="text/css">
    <link href="/Themes/PJS.Bootstrap/styles/jqgrid/ui.multiselect.css" rel="stylesheet" type="text/css">
    <style type="text/css">
        /* set the size of the datepicker search control for Order Date*/
        #ui-datepicker-div {
            font-size: 11px;
        }

        /* set the size of the autocomplete search control*/
        .ui-menu-item {
        }

        .ui-autocomplete {
            font-size: 11px;
        }
    </style>
}
<h1 style="margin:5px 10px 10px 10px">
    @(ViewBag.Title??T("Fulfillment Tracking List"))
</h1>

@using (Ajax.BeginForm("Save", "Create", new AjaxOptions { HttpMethod = "Post"
                                , OnBegin="beginSave"
                                , OnSuccess="completeSave" }))
{
    @Html.AntiForgeryToken()
    string returnUrl = Request["ReturnUrl"];
    @Html.HiddenFor(m => m.Head.Id)
    @Html.HiddenFor(m=>m.ActionName)
    <div class="panel panel-default" style="min-width:1138px;">
        <div class="panel-heading">
            <div class="row">
                <div class="col-lg-6 col-sm-6 col-xs-6">
                    <button class="btn btn-info" type="submit" name="submit.Save" value="@T("Save")">@T("Save")</button>
                    <button class="btn btn-info" type="submit" name="submit.Confirm" value="@T("Confirm")">@T("Confirm")</button>
                    <button class="btn btn-primary" type="submit" name="submit.Submit" value="@T("Submit")">@T("Submit")</button>
                    <button class="btn btn-warning" type="button" name="button.ExportToExcel" value="@T("ExportToExcel")">@T("Export To Excel")</button>
                </div>
                <div class="col-lg-6 col-sm-6 col-xs-6 text-right">
                    @if (!string.IsNullOrEmpty(returnUrl))
                    {
                        @Html.Link(T("Back").Text, returnUrl, new { @class = "btn btn-default" });
                    }
                    <button type="button" 
                            class="btn btn-sm btn-warning" 
                            data-toggle="collapse" 
                            data-target="#baseInfo">
                        <span class="glyphicon glyphicon-align-left" aria-hidden="true"></span>
                    </button>
                </div>
            </div>
        </div>
        <div class="alert fade in hide" resource="alert" id="statusMessage">
            <button type="button" class="close" onclick="hideStatusMessage()">
                <span aria-hidden="true">×</span><span class="sr-only">Close</span>
            </button>
            <p></p>
        </div>

        <div id="content">
            <div class="form-horizontal panel-body collapse in" id="baseInfo">
                <div class="form-group">
                    <div class="col-lg-2">
                        @Html.LabelFor(m => m.Head.Market, T("Market").ToString(), new { @class = "control-label", @style = "text-align:left" })
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.Head.Market, new { autofocus = "autofocus", @class = "form-control", @maxlength = "50" })
                        
                    </div>
                    <div class="col-lg-2">
                        @Html.LabelFor(m => m.Head.Seat, T("Seat").ToString(), new { @class = "control-label", @style = "text-align:left" })
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.Head.Seat, new { @class = "form-control", @maxlength = "50" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-2">
                        @Html.LabelFor(m => m.Head.Customer, T("Customer").ToString(), new { @class = "control-label", @style = "text-align:left" })
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.Head.Customer, new { @class = "form-control", @maxlength = "50" })
                    </div>
                    <div class="col-lg-2">
                        @Html.LabelFor(m => m.Head.Model, T("Model").ToString(), new { @class = "control-label", @style = "text-align:left" })
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.Head.Model, new { @class = "form-control", @maxlength = "50" })
                    </div>
                </div>
                <div class="form-group">
                    <div class="col-lg-2">
                        @Html.LabelFor(m => m.Head.Project, T("Program").ToString(), new { @class = "control-label", @style = "text-align:left" })
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.Head.Project, new { @class = "form-control", @maxlength = "50" })
                        @Html.ValidationMessageFor(m=>m.Head.Project)
                    </div>
                    <div class="col-lg-2">
                        @Html.LabelFor(m => m.Head.Product, T("MP Design Level").ToString(), new { @class = "control-label", @style = "text-align:left" })
                    </div>
                    <div class="col-lg-4">
                        @Html.TextBoxFor(m => m.Head.Product, new { @class = "form-control", @maxlength = "50" })
                    </div>
                </div>
                <div class="form-group"  style="margin-bottom:0px">
                    <div class="col-lg-12">
                        @Html.LabelFor(m => m.Head.Mechanism, T("Mechanism").ToString(), new { @class = "control-label", @style = "text-align:left" })
                        <p><sub>@T("(only for Mechanism quote)")</sub></p>
                    </div>
                    <div class="col-lg-12">
                        @Html.TextAreaFor(m => m.Head.Mechanism, new { @class = "form-control", @maxlength = "500" })
                    </div>
                </div>
            </div>
            <div class="panel-body">
                <!-- Nav tabs -->
                <ul class="nav nav-tabs" role="tablist" id="detailTab">
                    <li role="presentation" class="active">
                        <a href="#tabHead" aria-controls="tabHead" role="tab" data-toggle="tab">
                            @T("Revision")
                        </a>
                    </li>
                    <li role="presentation">
                        <a href="#tabContent" aria-controls="tabContent" role="tab" data-toggle="tab">
                            @T("Content")
                        </a>
                    </li>
                </ul>
                <!-- Tab panes -->
                <div class="tab-content">
                    <div role="tabpanel" class="tab-pane fade in active" id="tabHead">
                        <div id="revisionGrid" style="margin-right:10px;margin-top:10px">
                            <table id="jqRevisionGrid"></table>
                            <div id="jqRevisionGridPager"></div>
                        </div>
                    </div>
                    <div role="tabpanel" class="tab-pane fade" id="tabContent">
                        <div id="contentGrid" style="margin-right:10px;margin-top:10px">
                            <table id="jqContentGrid"></table>
                            <div id="jqContentGridPager"></div>
                        </div>
                    </div>
                </div>
               
            </div>
        </div>
     </div>
}
@using (Script.Foot())
{
    <script>
		$.jgrid.defaults.width = 780;
		$.jgrid.defaults.responsive = true;
		$.jgrid.defaults.styleUI = 'Bootstrap';
    </script>
    <script type="text/javascript">

        function beginSave(obj, req) {
            hideStatusMessage();
        }

        function completeSave(result) {
            showErrorInfo(result);
        }

        //隐藏状态消息
        function hideStatusMessage() {
            $("#statusMessage").addClass("hide");
        }
        function showErrorInfo(result) {
            var obj = JSON.parse(result);
            $("#statusMessage").find("p").html("");
            var message = obj.Message;
            $("#statusMessage").find("p").html(message);
            $("#statusMessage").removeClass("hide");
            if (obj.Code > 0) {
                $("#statusMessage").removeClass("alert-success");
                $("#statusMessage").addClass("alert-danger");
            }
            else {
                $("#statusMessage").removeClass("alert-danger");
                $("#statusMessage").addClass("alert-success");
                $("#@Html.IdFor(m=>m.Head.Id)").val(obj.Head.Id);
                fetchGridData();
            }
        }

        function fetchGridData()
        {
            $("#jqRevisionGrid")[0].grid.beginReq();
            var gridArrayData = [];
            var id = $("#@Html.IdFor(m=>m.Head.Id)").val();
            var url="@Url.Action("GetProjectRevisions", "Create", new { Area= "Faurecia.FTL" })";
            $.ajax({
                url: url,
                data: {projectId:id},
                success: function (result) {
                    var items = JSON.parse(result);
                    for (var i = 0; i < items.length; i++) {
                        var item = items[i];
                        gridArrayData.push(item);
                    }
                    // set the new data
                    $("#jqRevisionGrid").jqGrid('setGridParam', { data: gridArrayData });
                    // hide the show message
                    $("#jqRevisionGrid")[0].grid.endReq();
                    // refresh the grid
                    $("#jqRevisionGrid").trigger('reloadGrid');
                }
            });
        }



        $(function () {

            $("button[name='button.ExportToExcel']").bind("click", function () {
                var id = "@Html.IdFor(m=>m.Head.Id)";
                if (id == "") return;
                var url="@Url.Action("ExportToExcel", "Create", new { Area= "Faurecia.FTL" })";
                location.href = url + "/" + id;
            });

            initRevisionGrid();
            fetchGridData();

            if("@Model.ActionName"=="@Actions.Copy"){
                $("#@Html.IdFor(m=>m.Head.Id)").val(0);
            }
        });

        function initRevisionGrid() {

            var url="@Url.Action("SaveRevisionData", "Create", new { Area= "Faurecia.FTL" })";
            var width = $("#revisionGrid").width();
            $("#jqRevisionGrid").jqGrid({
                datatype: "local",
                editurl:"clientArray",
                data: [],
                colModel: [
                    {
                        align:"center",
                        label: "Program Phase",
                        name: 'ProgramPhase',
                        width: 150,
                        fixed:true,
                        colmenu: true,
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: false,
                            seraching: false,
                            grouping: false,
                            freeze: true
                        }
                    },
                    {
                        align:"center",
                        label: "Minior revision",
                        name: 'MiniorRevision',
                        width: 150,
                        fixed:true,
                        colmenu: true,
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: false,
                            seraching: false,
                            grouping: false,
                            freeze: true
                        }
                    },
                    {
                        align:"center",
                        label: "Status",
                        name: 'Status',
                        width: 100,
                        fixed:true,
                        colmenu: true,
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: false,
                            seraching: false,
                            grouping: false,
                            freeze: true
                        }
                    },
                    {
                        align:"center",
                        label: "Customer Specification name",
                        name: 'CustomerSpecificationName',
                        width: 200,
                        colmenu: true,
                        editable: true,
                        edittype:"file",
                        fixed:true,
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: false,
                            seraching: false,
                            grouping: false,
                            freeze: true
                        }
                    },
                    {
                        label: "Customer Release date",
                        name: 'CustomerReleaseDate',
                        width: 180,
                        colmenu: true,
                        editable: true,
                        fixed:true,
                        edittype:"text",
                        editoptions: {
                            // dataInit is the client-side event that fires upon initializing the toolbar search field for a column
                            // use it to place a third party control to customize the toolbar
                            dataInit: function (element) {
                                $(element).datepicker({
                                    id: 'customerReleaseDate_datePicker',
                                    dateFormat: 'yy.mm.dd',
                                    changeMonth: true,
                                    changeYear: true,
                                    autoSize: true,
                                    showOn: 'focus'
                                });
                            }
                        },
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: false,
                            seraching: false,
                            grouping: false,
                            freeze: true
                        }
                    },
                    {
                        label: "Review date (FSA)",
                        name: 'ReviewDate',
                        width: 130,
                        fixed:true,
                        colmenu: true,
                        editable: true,
                        edittype:"text",
                        editoptions: {
                            // dataInit is the client-side event that fires upon initializing the toolbar search field for a column
                            // use it to place a third party control to customize the toolbar
                            dataInit: function (element) {
                                $(element).datepicker({
                                    id: 'customerReleaseDate_datePicker',
                                    dateFormat: 'yy.mm.dd',
                                    changeMonth: true,
                                    changeYear: true,
                                    autoSize: true,
                                    showOn: 'focus'
                                });
                            }
                        },
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: false,
                            seraching: false,
                            grouping: false,
                            freeze: true
                        }
                    },
                    {
                        label: "Reviewed by (FSA)",
                        name: 'ReviewedBy',
                        fixed:true,
                        edittype:"text",
                        width: 130,
                        colmenu: true,
                        editable: true,
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: false,
                            seraching: false,
                            grouping: false,
                            freeze: true
                        }
                    },
                    {
                        label: "Comments",
                        name: 'Comments',
                        fixed:true,
                        width:200,
                        colmenu: true,
                        editable: true,
                        edittype:"textarea",
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: false,
                            seraching: false,
                            grouping: false,
                            freeze: true
                        }
                    },
                    {
                        label: "Owner",
                        name: 'Owner',
                        fixed:true,
                        width: 130,
                        colmenu: true,
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: false,
                            seraching: false,
                            grouping: false,
                            freeze: true
                        }
                    }
                ],
                loadonce: true,
                viewrecords: true,
                width: width,
                height: 200,
                rowNum: 15,
                rownumbers: true, // show row numbers
                rownumWidth: 25, // the width of the row numbers columns
                colMenu: true,
                shrinkToFit: true,
                pager: "#jqRevisionGridPager"
            });

            $('#jqRevisionGrid').navGrid('#jqRevisionGridPager',
                // the buttons to appear on the toolbar of the grid
                { edit: true, add: false, del: false, search: false, refresh: false, view: false, position: "left", cloneToTop: false },
                // options for the Edit Dialog
                {
                    editCaption: "The Edit Dialog",
                    recreateForm: true,
                    closeAfterEdit: true,
					viewPagerButtons: false,
                    afterShowForm: function(){

                    },
                    errorTextFormat: function (data) {
                        return 'Error: ' + data.responseText
                    }
                },
                // options for the Add Dialog
                {
                    closeAfterAdd: true,
                    recreateForm: true,
                    errorTextFormat: function (data) {
                        return 'Error: ' + data.responseText
                    }
                },
                // options for the Delete Dailog
                {
                    errorTextFormat: function (data) {
                        return 'Error: ' + data.responseText
                    }
                });
        }

        var initialized=false;
        function initContentGrid() {
            if (initialized) {
                return;
            }
            initialized = true;
            var width = $("#contentGrid").width();
            $("#jqContentGrid").jqGrid({
                datatype: "json",
                data: [],
                colModel: [
                    {
                        label: "Catalogue",
                        name: 'Catalogue',
                        width: 75,
                        coloptions: {
                            sorting: true,
                            columns: true,
                            filtering: true,
                            seraching: true,
                            grouping: false,
                            freeze: true
                        }
                    },
                    {
                        label: "Life phase",
                        name: 'LifePhase',
                        width: 90
                    },
                    {
                        label: "Function",
                        name: 'Function',
                        width: 90
                    },
                    {
                        label: " Customer specification reference",
                        name: 'CustomerSpecificationReference',
                        width: 100
                    },
                    {
                        label: "Chapter",
                        name: 'Chapter',
                        width: 100
                    },
                    {
                        label: "Page",
                        name: 'Page',
                        width: 80
                    },
                    {
                        label: "Specification subject",
                        name: 'SpecificationSubjectEnglish',
                        width: 100
                    },
                    {
                        label: "Reference files",
                        name: 'ReferenceFiles',
                        width: 100
                    },
                    {
                        label: "Criteria",
                        name: 'Criteria',
                        width: 80
                    },
                    {
                        label: "Satisfaction level",
                        name: 'SatisfactionLevel',
                        width: 100
                    },
                    {
                        label: "Test conditions and parameters",
                        name: 'TestConditions',
                        width: 100
                    },
                    {
                        label: "Concerned product",
                        name: 'ConcernedProduct',
                        width: 100
                    },
                    {
                        label: "Commitment level",
                        name: 'CommitmentLevel',
                        width: 100
                    },
                    {
                        label: "Test conditions and parameters",
                        name: 'TestConditions1',
                        width: 100
                    },
                    {
                        label: "Risk",
                        name: 'Risk',
                        width: 100
                    },
                    {
                        label: "Comments",
                        name: 'Comments',
                        width: 100
                    },
                    {
                        label: "Leader",
                        name: 'Leader',
                        width: 100
                    },
                    {
                        label: "Due date",
                        name: 'DueDate',
                        width: 100
                    },
                    {
                        label: "Related evidence for Faurecia commitment",
                        name: 'RelatedEvidence',
                        width: 100
                    },
                    {
                        label: "Competitor performance",
                        name: 'CompetitorPerformance',
                        width: 100
                    }
                ],
                loadonce: true,
                viewrecords: true,
                width: width,
                height: 200,
                rowNum: 10,
                rownumbers: true, // show row numbers
                rownumWidth: 25, // the width of the row numbers columns
                colMenu: true,
                shrinkToFit: true,
                pager: "#jqContentGridPager"
            });

            $('#jqContentGrid').setGroupHeaders(
               {
                   useColSpanStyle: true,
                   groupHeaders: [
                       { "numberOfColumns": 2, "titleText": "Sorting criterias", "startColumnName": "LifePhase" },
                       { "numberOfColumns": 8, "titleText": "Customer requirements", "startColumnName": "CustomerSpecificationReference" },
                       { "numberOfColumns": 4, "titleText": "Faurecia's commitment", "startColumnName": "ConcernedProduct" },
                       { "numberOfColumns": 3, "titleText": "Action plan", "startColumnName": "Comments" },
                       { "numberOfColumns": 2, "titleText": "", "startColumnName": "RelatedEvidence" }
                   ]
               });
        }

        $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
            //e.target // newly activated tab
            //e.relatedTarget // previous active tab
            if (e.target.hash == "#tabContent") {
                initContentGrid();
            }
        })
    </script>
}