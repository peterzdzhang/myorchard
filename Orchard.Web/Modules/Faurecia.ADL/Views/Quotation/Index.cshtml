@model Faurecia.ADL.ViewModels.ADLQuotationViewModel
@{
    Script.Require("jQueryUI");
    Style.Require("jQueryUI");
    Style.Require("FaureciaADLStyle");
}
<h1 style="margin:5px 10px 10px 10px">
    @ViewBag.Title
</h1>
@using (Html.BeginFormAntiForgeryPost())
{
    int index = 0;
    string returnUrl = Request["returnurl"];
    var projectNoVersionNo = string.Empty;
    if (!string.IsNullOrWhiteSpace(Model.ProjectNo))
    {
        projectNoVersionNo = string.Format("{0}.{1}", Model.ProjectNo, Model.VersionNo);
    }
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="row">
                <div class="col-lg-6 col-sm-8">
                @if (Model.Action != Faurecia.ADL.ViewModels.EnumActions.View)
                {
                    <button class="btn btn-info" type="submit" name="submit.Save" value="@T("Save")">@T("Save")</button>
                    <button class="btn btn-info" type="submit" name="submit.Confirm" value="@T("Confirm")">@T("Confirm")</button>
                    <button class="btn btn-primary" type="submit" name="submit.Submit" value="@T("Submit")">@T("Submit")</button>
                }
                &nbsp;
                </div>
                <div class="col-lg-6 col-sm-4 text-right">
                    @if (!string.IsNullOrEmpty(returnUrl))
                    {
                        @Html.Link(T("Back").Text, returnUrl,new { @class = "btn btn-default" });
                    }
                </div>
            </div>
        </div>
        <div class="panel-body">
            @Html.HiddenFor(m=>m.Action)
            @Html.HiddenFor(m => m.Id)
            @if(!string.IsNullOrEmpty(Model.Message))
            {
            <div class="alert alert-success">
                @Model.Message
            </div>
            }
            @Html.ValidationSummary(true,T("Failed:Please check input content.").Text,new {@class="alert alert-danger" })
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(m => m.Customer, T("Customer").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.Customer, new { autofocus = "autofocus",@readonly="readonly", @class = "form-control", @style = "text-transform:uppercase", @maxlength = 3, placeholder = "" })
                        @Html.ValidationMessageFor(m => m.Customer)
                    </div>
                    @Html.LabelFor(m => m.ProjectNo, T("Project No").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBox("projectNoVersionNo", projectNoVersionNo,new { @readonly="readonly", @class = "form-control", @disabled = "disabled"})
                    </div>
                    @Html.LabelFor(m => m.Currency, T("Currency").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.Currency, new { @class = "form-control", @maxlength = 3, placeholder = "",@style= "text-transform:uppercase" })
                        @Html.ValidationMessageFor(m => m.Currency)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Name, T("Name").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-10 col-lg-10">
                        @Html.TextBoxFor(m => m.Name, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.Name)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.ProgramManager, T("Manager").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.ProgramManager, new {@class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.ProgramManager)
                    </div>
                    @Html.LabelFor(m => m.ProgramController, T("Controller").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.ProgramController, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.ProgramController)
                    </div>
                    @Html.Label("Status", T("Status").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        <label class="control-label text-warning" style="text-align:left">
                            @string.Format("{0}-{1}",Model.Phase,Model.Status)
                        </label>
                    </div>
                </div>
            </div>
            <div class="alert alert-info text-center">
                @T("Request info / milestone")
            </div>
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(m => m.Type, T("Type").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        <select id="@Html.IdFor(m=>m.Type)" name="@Html.NameOf(m => m.Type)">
                            @Html.SelectOption(Model.Type,"Adavance phase", T("Adavance phase").ToString())
                            @Html.SelectOption(Model.Type, "RFI", T("RFI").ToString())
                            @Html.SelectOption(Model.Type, "RFQ", T("RFQ").ToString())
                        </select>
                        @Html.ValidationMessageFor(m => m.Type)
                    </div>
                    @Html.LabelFor(m => m.StartDate, T("Start Date").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2">
                        @Html.TextBoxFor(m => m.StartDate, new { @class = "form-control datepicker", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.StartDate)
                    </div>
                    @Html.LabelFor(m => m.Mockup, T("Mock up").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.Mockup, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.Mockup)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.OfferDate, T("Offer Date").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.OfferDate, new { @class = "form-control datepicker", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.OfferDate)
                    </div>
                    @Html.LabelFor(m => m.ProtoDate, T("Proto Date").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.ProtoDate, new { @class = "form-control datepicker", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.ProtoDate)
                    </div>
                    @Html.LabelFor(m => m.Award, T("Award").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.Award, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.Award)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.SOPDate, T("SOP Date").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.SOPDate, new { @class = "form-control datepicker", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.SOPDate)
                    </div>
                    @Html.LabelFor(m => m.PTRDate, T("PTR Date").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.PTRDate, new { @class = "form-control datepicker", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.PTRDate)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.MileStoneComments, T("Comments").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-10 col-lg-10">
                        @Html.TextAreaFor(m => m.MileStoneComments, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.MileStoneComments)
                    </div>
                </div>
            </div>
            <div class="alert alert-info text-center">
                @T("Vehicle / frame information")
            </div>
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(m => m.Variant1, T("Variant").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        <select id="@Html.IdFor(m=>m.Variant1)" name="@Html.NameOf(m => m.Variant1)">
                            @Html.SelectOption(Model.Variant1, "1st Row", T("1st Row").ToString())
                            @Html.SelectOption(Model.Variant1, "2W", T("2W").ToString())
                            @Html.SelectOption(Model.Variant1, "Man", T("Man").ToString())
                            @Html.SelectOption(Model.Variant1, "5D", T("5D").ToString())
                        </select>
                        @Html.ValidationMessageFor(m => m.Variant1)
                    </div>
                    <div class="col-sm-2 col-lg-2">
                        <select id="@Html.IdFor(m=>m.Variant2)" name="@Html.NameOf(m => m.Variant2)">
                            @Html.SelectOption(Model.Variant2, "2nd Row", T("2nd Row").ToString())
                            @Html.SelectOption(Model.Variant2, "4W", T("4W").ToString())
                            @Html.SelectOption(Model.Variant2, "Pow", T("Pow").ToString())
                            @Html.SelectOption(Model.Variant2, "3D", T("3D").ToString())
                        </select>
                        @Html.ValidationMessageFor(m => m.Variant2)
                    </div>
                    <div class="col-sm-2 col-lg-2">
                        <select id="@Html.IdFor(m=>m.Variant3)" name="@Html.NameOf(m => m.Variant3)">
                            @Html.SelectOption(Model.Variant3, "3rd Row", T("3rd Row").ToString())
                            @Html.SelectOption(Model.Variant3, "6W & More", T("6W & More").ToString())
                        </select>
                        @Html.ValidationMessageFor(m => m.Variant3)
                    </div>

                    @Html.LabelFor(m => m.FrameMaturity, T("Frame maturity").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        <select id="@Html.IdFor(m=>m.FrameMaturity)" name="@Html.NameOf(m => m.FrameMaturity)">
                            @Html.SelectOption(Model.FrameMaturity, "New", T("New").ToString())
                            @Html.SelectOption(Model.FrameMaturity, "Carry over", T("Carry over").ToString())
                            @Html.SelectOption(Model.FrameMaturity, "Unknown", T("Unknown").ToString())
                        </select>
                        @Html.ValidationMessageFor(m => m.FrameMaturity)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.VehicelComments, T("Comments").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-10 col-lg-10">
                        @Html.TextAreaFor(m => m.VehicelComments, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.VehicelComments)
                    </div>
                </div>
            </div>
            <div class="alert alert-info text-center">
                @T("Products offer")
            </div>
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(m => m.Tracks, T("Tracks").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        <select id="@Html.IdFor(m=>m.Tracks)" name="@Html.NameOf(m => m.Tracks)">
                            @Html.SelectOption(Model.Tracks, "MT30", T("MT30").ToString())
                            @Html.SelectOption(Model.Tracks, "MT36", T("MT36").ToString())
                            @Html.SelectOption(Model.Tracks, "Ultima", T("Ultima").ToString())
                            @Html.SelectOption(Model.Tracks, "4CB", T("4CB").ToString())
                            @Html.SelectOption(Model.Tracks, "4CB II", T("4CB II").ToString())
                            @Html.SelectOption(Model.Tracks, "449", T("449").ToString())
                            @Html.SelectOption(Model.Tracks, "POW", T("POW").ToString())
                            @Html.SelectOption(Model.Tracks, "IL", T("IL").ToString())
                            @Html.SelectOption(Model.Tracks, "SL", T("SL").ToString())
                            @Html.SelectOption(Model.Tracks, "Memo", T("Memo").ToString())
                        </select>
                        @Html.ValidationMessageFor(m => m.Tracks)
                    </div>
                    @Html.LabelFor(m => m.Recliner, T("Recliner").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        <select id="@Html.IdFor(m=>m.Recliner)" name="@Html.NameOf(m => m.Recliner)">
                            @Html.SelectOption(Model.Recliner, "RD70", T("RD70").ToString())
                            @Html.SelectOption(Model.Recliner, "RD77", T("RD77").ToString())
                            @Html.SelectOption(Model.Recliner, "S3U/D83", T("S3U/D83").ToString())
                            @Html.SelectOption(Model.Recliner, "D93", T("D93").ToString())
                            @Html.SelectOption(Model.Recliner, "RC70 Pow", T("RC70 Pow").ToString())
                            @Html.SelectOption(Model.Recliner, "RC70 Man", T("RC70 Man").ToString())
                            @Html.SelectOption(Model.Recliner, "RC70 IB", T("RC70 IB").ToString())
                            @Html.SelectOption(Model.Recliner, "Other", T("Other").ToString())
                        </select>
                        @Html.ValidationMessageFor(m => m.Recliner)
                    </div>
                    @Html.LabelFor(m => m.HA, T("HA").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        <select id="@Html.IdFor(m=>m.HA)" name="@Html.NameOf(m => m.HA)">
                            @Html.SelectOption(Model.HA, "Nano 2.0", T("Nano 2.0").ToString())
                            @Html.SelectOption(Model.HA, "Nan 1.0", T("Nan 1.0").ToString())
                            @Html.SelectOption(Model.HA, "G3", T("G3").ToString())
                            @Html.SelectOption(Model.HA, "G2", T("G2").ToString())
                            @Html.SelectOption(Model.HA, "Epump 1.0", T("Epump 1.0").ToString())
                            @Html.SelectOption(Model.HA, "Epump 2.0", T("Epump 2.0").ToString())
                        </select>
                        @Html.ValidationMessageFor(m => m.HA)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(m => m.Ballfix, T("Ballfix").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.TextBoxFor(m => m.Ballfix, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.Ballfix)
                    </div>
                    @Html.LabelFor(m => m.KEZE, T("Recliner").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        <select id="@Html.IdFor(m=>m.KEZE)" name="@Html.NameOf(m => m.KEZE)">
                            @Html.SelectOption(Model.KEZE, "RD77", T("RD77").ToString())
                            @Html.SelectOption(Model.KEZE, "RD70", T("RD70").ToString())
                            @Html.SelectOption(Model.KEZE, "RC70 Pow", T("RC70 Pow").ToString())
                            @Html.SelectOption(Model.KEZE, "RC70 Man", T("RC70 Man").ToString())
                        </select>
                        @Html.ValidationMessageFor(m => m.KEZE)
                    </div>
                </div>
            </div>
        </div>
        <!-- Nav tabs -->
        <ul class="nav nav-tabs" role="tablist">
        @for (int i = 0; i < Model.Years.Count; i++)
        {
            int year = Model.Years[i];
            if (year == Model.CurrentYear)
            {
                <li role="presentation" class="active"><a href="#@year" role="tab" data-toggle="tab">@year</a></li>
            }
            else
            {
                <li role="presentation"><a href="#@year" role="tab" data-toggle="tab">@year</a></li>
            }
        }
        </ul>
        <!-- Tab panes -->
        <div class="tab-content">
            
        </div>
        <div class="panel-footer">
            <div class="form-horizontal">
                <div class="form-group">
                    @Html.LabelFor(m => m.IBP, T("IBP").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Html.DropDownListFor(m => m.IBP, Model.IBPs, new { @class = "form-control", placeholder = "" })
                        @Html.ValidationMessageFor(m => m.IBP)
                    </div>
                    @Html.LabelFor(m => m.Quotation, T("Quotation").Text, new { @class = "col-sm-2 col-lg-2 control-label", @style = "text-align:left" })
                    <div class="col-sm-2 col-lg-2">
                        @Model.Quotation
                    </div>
                    <label class = "col-sm-2 col-lg-2 control-label" style = "text-align:left">
                        @T("Creator").Text
                    </label>
                    <div class="col-sm-2 col-lg-2">
                        <label class="control-label text-success" style="text-align:left">
                            @Model.Creator
                        </label>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@using (Script.Foot())
{
    <script type="text/javascript">
        $(function () {

            if ("@Model.Action" == "@Faurecia.ADL.ViewModels.EnumActions.View") {
                $("input").attr("readonly", "readonly");
                $("select").attr("disabled", "disabled");
                $("textarea").attr("readonly", "readonly");
            }
            else {
                $(".datepicker").datepicker({
                    changeMonth: true,
                    changeYear: true,
                    autoSize: true,
                    dateFormat: "yy/mm/dd"
                });
                $("#Action").val("@Model.Action");
            }
        })
    </script>
}