@model ActivityTypeIndexViewModel
@using Faurecia.ADL.ViewModels;
@{
    Script.Require("Microsoft_jQueryAjax_Validate");
}
<h1>
    @Html.TitleForPage(T("Activity Type").ToString())
</h1>
@using (Ajax.BeginForm("Index", "ActivityType"
                        , new AjaxOptions { HttpMethod = "Post", UpdateTargetId = "QueryResults", OnComplete = "onCompleteQuery" }))
{
    @Html.AntiForgeryToken()
    <div class="panel panel-default">
        <div class="panel-heading">
            <div class="form-inline">
                <div class="form-group">
                    <label for="publishActions">@T("Actions:")</label>
                    <select id="publishActions" class="form-control" name="@Html.NameOf(m => m.Options.BulkAction)">
                        @Html.SelectOption(Model.Options.BulkAction, ActivityTypeBulkAction.None, T("Choose action...").ToString())
                        @Html.SelectOption(Model.Options.BulkAction, ActivityTypeBulkAction.BulkEdit, T("Edit").ToString())
                        @Html.SelectOption(Model.Options.BulkAction, ActivityTypeBulkAction.BulkDisabled, T("Disabled").ToString())
                        @Html.SelectOption(Model.Options.BulkAction, ActivityTypeBulkAction.BulkEnabled, T("Enabled").ToString())
                    </select>
                    @Ajax.ActionLink(T("Apply").Text
                                , "BulkAction"
                                , new { }
                                , new AjaxOptions()
                                {
                                    OnBegin = "onBeginBulkAction",
                                    OnComplete = "onCompleteBulkAction"
                                }, new { @class = "btn btn-warning" })
                </div>
                <div class="form-group">
                    @Html.TextBoxFor(m => m.Options.Search, new { @class = "form-control" })
                </div>
                <div class="form-group">
                    <label for="sortResults">@T("Sort by:")</label>
                    <select id="sortResults" class="form-control" name="@Html.NameOf(m => m.Options.Order)">
                        @Html.SelectOption(Model.Options.Order, ActivityTypeOrder.CostCenter, T("Cost Center asc").ToString())
                        @Html.SelectOption(Model.Options.Order, ActivityTypeOrder.CostCenterDesc, T("Cost Center desc").ToString())
                    </select>
                </div>
                <button type="submit" class="btn btn-info" name="submit.Filter" value="@T("Filter")">@T("Filter")</button>

                @Html.ActionLink(T("Add new activity type"), "Create", "ActivityType"
                        , new { Area = "Faurecia.ADL", returnurl = HttpContext.Current.Request.RawUrl }
                        , new { @class = "btn btn-primary" })
            </div>
        </div>

        <div class="panel-body" id="QueryResults">
            @Html.Partial("_ActivityTypes", Model)
        </div>
    </div>
}


@using (Script.Foot())
{
    <script type="text/javascript">
        $(function () {
            $("button[name='submit.Filter']").submit();
        })

        function onCompleteQuery(result) {
            $(".check-all").bind("change", function () {
                var isChecked = $(this).prop("checked");
                $("input[type='checkbox']").prop("checked", isChecked);
            });
        }

        function onBeginBulkAction(obj, req) {
            var ids = "";
            $("td>input[type='checkbox']:checked").each(function (xi, xitem) {
                var id = $(xitem).parent().find("input[type='hidden']").val();
                if (!!id){
                    ids = ids + "&ids[" + xi + "]=" + id;
                }
            });
            var action = $("#publishActions").val();
            if (!!ids) {
                req.url = req.url + ids + "&actionName=" + action+"&returnurl=@HttpContext.Current.Request.RawUrl";

                if (action == "@ActivityTypeBulkAction.BulkEdit") {
                    obj.abort();
                    location.href=req.url;
                }
            }
            else {
                obj.abort();
            }
        }

        function onCompleteBulkAction(result) {
            var data = result.responseJSON;
            if (!!data && data.Code == 0) {
                refresh();
            }
        }

        function onCompleteDelete(result) {
            var data = result.responseJSON;
            if (!!data && data.Code == 0) {
                refresh();
            }
        }

        function refresh() {
            var btn = $("button[name='page'].btn-primary");

            if (btn.length > 0) {
                $(btn).removeAttr("disabled");
                $(btn).click();
            }
            else {
                $("button[name='submit.Filter']").submit();
            }
        }
    </script>
}