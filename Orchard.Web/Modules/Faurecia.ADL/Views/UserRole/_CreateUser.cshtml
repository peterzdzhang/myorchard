@model UserViewModel
@using Faurecia.ADL.ViewModels;

<div class="form-group">
    @Html.LabelFor(m => m.UserName, T("User Name").Text, new { @class = "col-sm-3 col-xs-3 col-lg-3 control-label", @style = "text-align:left" })
    <div class="col-sm-8 col-xs-8 col-lg-8">
        @if (Model.Id == 0)
        {
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control" })
        }
        else
        {
            @Html.TextBoxFor(m => m.UserName, new { @class = "form-control",@readonly="readonly" })
        }
        @Html.HiddenFor(m=>m.Id)
    </div>
    <div class="col-sm-1 col-xs-1 col-lg-1">
        @Html.ValidationMessageFor(m => m.UserName, "*")
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.Email, T("Email").Text, new { @class = "col-sm-3 col-xs-3 col-lg-3 control-label", @style = "text-align:left" })
    <div class="col-sm-8 col-xs-8 col-lg-8">
        @Html.TextBoxFor(m => m.Email, new { @class = "form-control" })
    </div>
    <div class="col-sm-1 col-xs-1 col-lg-1">
        @Html.ValidationMessageFor(m => m.Email, "*")
    </div>
</div>
@if (Model.Id == 0)
{
<div class="form-group">
    @Html.LabelFor(m => m.Password, T("Password").Text, new { @class = "col-sm-3 col-xs-3 col-lg-3 control-label", @style = "text-align:left" })
    <div class="col-sm-8 col-xs-8 col-lg-8">
        @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
    </div>
    <div class="col-sm-1 col-xs-1 col-lg-1">
        @Html.ValidationMessageFor(m => m.Password, "*")
    </div>
</div>
<div class="form-group">
    @Html.LabelFor(m => m.ConfirmPassword, T("Confirm Password").Text, new { @class = "col-sm-3 col-xs-3 col-lg-3 control-label", @style = "text-align:left" })
    <div class="col-sm-8 col-xs-8 col-lg-8">
        @Html.PasswordFor(m => m.ConfirmPassword, new { @class = "form-control" })
    </div>
    <div class="col-sm-1 col-xs-1 col-lg-1">
        @Html.ValidationMessageFor(m => m.ConfirmPassword, "*")
    </div>
</div>
}
<fieldset>
    <legend>@T("Roles")</legend>
    @if (Model.Roles.Count > 0)
    {
        var index = 0;
        foreach (var entry in Model.Roles)
        {
            if (string.Equals(entry.Name, "Authenticated", StringComparison.OrdinalIgnoreCase) || string.Equals(entry.Name, "Anonymous", StringComparison.OrdinalIgnoreCase))
            {
                continue;
            }

            @Html.Hidden("Roles[" + index + "].RoleId", entry.RoleId)
            @Html.Hidden("Roles[" + index + "].Name", entry.Name)

            <div>
                @Html.CheckBox("Roles[" + index + "].Granted", entry.Granted)
                <span for="@Html.FieldIdFor(m => m.Roles[index].Granted)">@entry.Name</span>
            </div>
            index++;
        }
    }
    else
    {
        <p>@T("There are no roles.")</p>
    }
</fieldset>
